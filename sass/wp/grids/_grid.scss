/*------------------------------------*\
    GRIDS    
\*------------------------------------*/


/**
 * Nested Row
 */

.row .row, .row--wide{
    width: auto;
    max-width: none;
    min-width: 0; 
    margin: 0 -12px;  
}

/**
 * Grid Clearing
 */

.row {  
    width: 100%;
    @include clearfix;
}

/**
 * Column aligned centrally
 */

.column--center {
    float: none;
    margin: 0 auto;
}
.column--uncenter {
    float: left;
    margin: 0;
}

/**
 * Collapsed Row
 */

.row--collapse {

    > .columns{
        padding-left: 0;
        padding-right: 0;
    } 

    .row {
        margin-left: 0;
        margin-right: 0;
    }
}

/**
 * UnCollapsed Row
 */

.row--uncollapse{

    .columns{
      float: #{$dir-default};
      min-height: 1px;
      padding: 0 $grid-spacing/2;
      position: relative;
    } 
}

/* Columns */

.columns {
    float: #{$dir-default};
    min-height: 1px;
    padding: 0 $grid-spacing/2;
    position: relative;
}

/* Columns padding left & right */

.columns--push {
    float: #{$dir-default};
    min-height: 1px;
    padding-right: $grid-spacing/2;
    position: relative;
}


/**
 * In the HTML above we see several `col` elements with classes whose numbers
 * represent a percentage width for that column. We leave one column free of a
 * class so that column can soak up the effects of any accidental breakage in
 * the table.
 */

.d-1-12 {
    width: 8.3333%;
}
.d-1-8 {
    width: 12.5%;
}
.d-1-6 {
    width: 16.6667%;
}
.d-1-5 {
    width: 20%;
}
.d-1-4 {
    width: 25%;
}
.d-1-3 {
    width: 33.3333%;
}
.d-3-8 {
    width: 37.5%;
}
.d-2-5 {
    width: 40%;
}
.d-5-12 {
    width: 41.6667%;
}
.d-1-2 {
    width: 50%;
}
.d-7-12 {
    width: 58.3333%;
}
.d-3-5 {
    width: 60%;
}
.d-5-8 {
    width: 62.5%;
}
.d-2-3 {
    width: 66.6667%;
}
.d-3-4 {
    width: 75%;
}
.d-4-5 {
    width: 80%;
}
.d-5-6 {
    width: 83.3333%;
}
.d-7-8 {
    width: 87.5%;
}
.d-11-12 {
    width: 91.6667%;
}
.d-1-1, .d-5-5 {
    width: 100%;
}

.t1     { width: 1% !important; }
.t2     { width: 2% !important; }
.t3     { width: 3% !important; }
.t4     { width: 4% !important; }
.t5     { width: 5% !important; }
.t6     { width: 6% !important; }
.t7     { width: 7% !important; }
.t8     { width: 8% !important; }
.t9     { width: 9% !important; }

.t10    { width:10% !important; }
.t11    { width:11% !important; }
.t12    { width:12% !important; }     /* 1/8 */
.t13    { width:13% !important; }
.t14    { width:14% !important; }
.t15    { width:15% !important; }
.t16    { width:16% !important; }
.t17    { width:17% !important; }
.t18    { width:18% !important; }
.t19    { width:19% !important; }

.t20    { width:20% !important; }
.t21    { width:21% !important; }
.t22    { width:22% !important; }
.t23    { width:23% !important; }
.t24    { width:24% !important; }
.t25    { width:25% !important; }       /* 1/4 */
.t26    { width:26% !important; }
.t27    { width:27% !important; }
.t28    { width:28% !important; }
.t29    { width:29% !important; }

.t30    { width:30% !important; }
.t31    { width:31% !important; }
.t32    { width:32% !important; }
.t33    { width:33% !important; }   /* 1/3 */
.t34    { width:34% !important; }
.t35    { width:35% !important; }
.t36    { width:36% !important; }
.t37    { width:37% !important; }     /* 3/8 */
.t38    { width:38% !important; }
.t39    { width:39% !important; }

.t40    { width:40% !important; }
.t41    { width:41% !important; }
.t42    { width:42% !important; }
.t43    { width:43% !important; }
.t44    { width:44% !important; }
.t45    { width:45% !important; }
.t46    { width:46% !important; }
.t47    { width:47% !important; }
.t48    { width:48% !important; }
.t49    { width:49% !important; }

.t50    { width:50% !important; }       /* 1/2 */
.t51    { width:51% !important; }
.t52    { width:52% !important; }
.t53    { width:53% !important; }
.t54    { width:54% !important; }
.t55    { width:55% !important; }
.t56    { width:56% !important; }
.t57    { width:57% !important; }
.t58    { width:58% !important; }
.t59    { width:59% !important; }

.t60    { width:60% !important; }
.t61    { width:61% !important; }
.t62    { width:62% !important; }     /* 5/8 */
.t63    { width:63% !important; }
.t64    { width:64% !important; }
.t65    { width:65% !important; }
.t66    { width:66% !important; }   /* 2/3 */
.t67    { width:67% !important; }
.t68    { width:68% !important; }
.t69    { width:69% !important; }

.t70    { width:70% !important; }
.t71    { width:71% !important; }
.t72    { width:72% !important; }
.t73    { width:73% !important; }
.t74    { width:74% !important; }
.t75    { width:75% !important; }       /* 3/4*/
.t76    { width:76% !important; }
.t77    { width:77% !important; }
.t78    { width:78% !important; }
.t79    { width:79% !important; }

.t80    { width:80% !important; }
.t81    { width:81% !important; }
.t82    { width:82% !important; }
.t83    { width:83% !important; }
.t84    { width:84% !important; }
.t85    { width:85% !important; }
.t86    { width:86% !important; }
.t87    { width:87% !important; }     /* 7/8 */
.t88    { width:88% !important; }
.t89    { width:89% !important; }

.t90    { width:90% !important; }
.t91    { width:91% !important; }
.t92    { width:92% !important; }
.t93    { width:93% !important; }
.t94    { width:94% !important; }
.t95    { width:95% !important; }
.t96    { width:96% !important; }
.t97    { width:97% !important; }
.t98    { width:98% !important; }
.t99    { width:99% !important; }

.t100    { width:100% !important; }


@include media-query(grid-desktop){

  /*
   * Add Grids for tablets and desktops
   */

   /**
     * Generates grids columns
     */

    @for $i from 1 through $grid-columns{
        .#{d-}#{convert-number-to-word($i)}{
            width: gridCalc($i, $grid-columns);
        }
    }

    /**
     * Column aligned centrally
     */

    .d-column--center {
        float: none;
        margin: 0 auto;
    }
    .d-column--uncenter {
        float: left;
        margin: 0;
    }

    /**
     * Collapsed Row
     */

    .d-collapse{

        .columns{
            padding-left: 0;
            padding-right: 0;
        } 

        .row &{
            margin-left: 0;
            margin-right: 0;
        }
    }

    /**
     * UnCollapsed Row
     */

    .d-uncollapse{

        .columns{
          float: #{$dir-default};
          min-height: 1px;
          padding: 0 $grid-spacing/2;
          position: relative;
        } 
    }
    
    @for $i from 1 through $grid-columns - 1 {
      .d__push--#{convert-number-to-word($i)} { #{$dir-default}: gridCalc($i, $grid-columns); }
      .d__pull--#{convert-number-to-word($i)} { #{$dir-reverse}: gridCalc($i, $grid-columns); }
    }

    @for $i from 1 through $grid-columns - 1 {
      .d__offset--#{convert-number-to-word($i)} { margin-left: gridCalc($i, $grid-columns); }
    }

  
}

@include media-query(grid-mobile){

    /* Columns */

    .columns {
        width: 100%;
    }
    /**
     * Column aligned centrally
     */

    .m-column--center {
        float: none;
        margin: 0 auto;
    }
    .m-column--uncenter {
        float: left;
        margin: 0;
    }
    /**
     * Collapsed Row
     */

    .m-collapse{

        .columns{
            padding-left: 0;
            padding-right: 0;
        } 

        .row &{
            margin-left: 0;
            margin-right: 0;
        }
    }

    /**
     * UnCollapsed Row
     */

    .m-uncollapse{

        .columns{
          float: #{$dir-default};
          min-height: 1px;
          padding: 0 $grid-spacing/2;
          position: relative;
        } 
    }

    /*------------------------------------*\
      Grids for Phones Only
    \*------------------------------------*/

    /**
     * Phone - Specify number of columns
     * <div class="columns three three--phone"></div>  => Two phone in tablet
     */

    @for $i from 1 through $grid-mobile-columns{
      .#{m-}#{convert-number-to-word-mobile($i)}{
        float: left;
        padding: 0 $grid-spacing/2;
        width: gridCalc($i, $grid-mobile-columns);
      }
    }

    @for $i from 1 through $grid-columns - 1 {
      .m__push--#{convert-number-to-word($i)} { #{$dir-default}: gridCalc($i, $grid-columns); }
      .m__pull--#{convert-number-to-word($i)} { #{$dir-reverse}: gridCalc($i, $grid-columns); }
    }

    @for $i from 1 through $grid-columns - 1 {
      .m__offset--#{convert-number-to-word($i)} { margin-left: gridCalc($i, $grid-columns); }
    }

}

@include media-query(grid-tablet){

  /*------------------------------------*\
    Grids for Tablet Only
  \*------------------------------------*/

  /**
   * Tablet - Specify number of columns
   * <div class="columns three three--tablet"></div>  => Two phone in tablet
   */

  @for $i from 1 through $grid-tablet-columns{
    .#{tl-}#{convert-number-to-word-tablet($i)}{
      float: left;
      padding: 0 $grid-spacing/2;
      width: gridCalc($i, $grid-tablet-columns);
    }
  }

  /**
     * Column aligned centrally
     */

    .tl-column--center {
        float: none;
        margin: 0 auto;
    }
    .tl-column--uncenter {
        float: left;
        margin: 0;
    }
    /**
     * Collapsed Row
     */

    .tl-collapse{

        .columns{
            padding-left: 0;
            padding-right: 0;
        } 

        .row &{
            margin-left: 0;
            margin-right: 0;
        }
    }

    /**
     * UnCollapsed Row
     */

    .tl-uncollapse{

        .columns{
          float: #{$dir-default};
          min-height: 1px;
          padding: 0 $grid-spacing/2;
          position: relative;
        } 
    }

    @for $i from 1 through $grid-columns - 1 {
      .tl__push--#{convert-number-to-word($i)} { #{$dir-default}: gridCalc($i, $grid-columns); }
      .tl__pull--#{convert-number-to-word($i)} { #{$dir-reverse}: gridCalc($i, $grid-columns); }
    }

    @for $i from 1 through $grid-columns - 1 {
      .tl__offset--#{convert-number-to-word($i)} { margin-left: gridCalc($i, $grid-columns); }
    }

}